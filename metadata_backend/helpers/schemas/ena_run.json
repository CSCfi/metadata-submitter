{
    "title": "Run",
    "definitions": {
        "Links": {
            "$id": "#/definitions/Links",
            "title": "Link Type",
            "oneOf": [
                {
                    "$ref": "#/definitions/xrefLink"
                },
                {
                    "$ref": "#/definitions/urlLink"
                },
                {
                    "$ref": "#/definitions/entrezLink"
                }
            ]
        },
        "xrefLink": {
            "$id": "#/definitions/xrefLink",
            "title": "XRef Link",
            "type": "object",
            "required": [
                "xrefDb",
                "xrefId"
            ],
            "properties": {
                "xrefDb": {
                    "type": "string",
                    "title": "Database",
                    "description": "Name of the database or a link where the resource is located at. INSDC controlled vocabulary of permitted cross references.Please see http://www.insdc.org/db_xref.html . For example, FLYBASE."
                },
                "xrefId": {
                    "type": "string",
                    "title": "Database ID",
                    "description": "Accession ID or stable identifier, in the referenced database. For example, FBtr0080008 (in FLYBASE)"
                },
                "label": {
                    "type": "string",
                    "title": "Label",
                    "description": "A text label to identify the xrefLink by."
                }
            }
        },
        "urlLink": {
            "$id": "#/definitions/urlLink",
            "title": "URL Link",
            "type": "object",
            "required": [
                "label",
                "url"
            ],
            "properties": {
                "label": {
                    "type": "string",
                    "title": "Label",
                    "description": "A text label to identify the urlLink by."
                },
                "url": {
                    "type": "string",
                    "title": "URL",
                    "description": "The internet service link (http(s), ftp) etc.",
                    "pattern": "^(https?|ftp)://"
                }
            }
        },
        "entrezLink": {
            "$id": "#/definitions/entrezLink",
            "title": "Entrez Link",
            "type": "object",
            "required": [
                "entrezDb",
                "entrezId"
            ],
            "properties": {
                "entrezDb": {
                    "description": "Entrez Molecular Sequence Database System, NCBI controlled vocabulary of permitted cross references. Also known as Entrez Direct (EDirect) .",
                    "title": "Database",
                    "type": "string",
                    "enum": [
                        "annotinfo",
                        "assembly",
                        "biocollections",
                        "bioproject",
                        "biosample",
                        "biosystems",
                        "blastdbinfo",
                        "books",
                        "cdd",
                        "clinvar",
                        "dbvar",
                        "gap",
                        "gapplus",
                        "gds",
                        "gene",
                        "genome",
                        "geoprofiles",
                        "grasp",
                        "gtr",
                        "homologene",
                        "ipg",
                        "medgen",
                        "mesh",
                        "ncbisearch",
                        "nlmcatalog",
                        "nuccore",
                        "nucleotide",
                        "omim",
                        "orgtrack",
                        "pcassay",
                        "pccompound",
                        "pcsubstance",
                        "pmc",
                        "popset",
                        "protein",
                        "proteinclusters",
                        "protfam",
                        "pubmed",
                        "seqannot",
                        "snp",
                        "sra",
                        "structure",
                        "taxonomy"
                    ]
                },
                "entrezId": {
                    "type": "string",
                    "title": "Database ID",
                    "description": "Numeric record id meaningful to the NCBI Entrez system.",
                    "pattern": "^[a-zA-Z0-9]+"
                },
                "label": {
                    "description": "A text label to identify the url Entrez link by.",
                    "title": "Label",
                    "type": "string"
                }
            }
        },
        "runAttribute": {
            "$id": "#/definitions/runAttribute",
            "type": "object",
            "title": "Run Attribute",
            "required": [
                "tag",
                "value"
            ],
            "properties": {
                "tag": {
                    "type": "string",
                    "title": "Tag title"
                },
                "value": {
                    "type": "string",
                    "title": "Description"
                },
                "units": {
                    "type": "string",
                    "title": "Optional scientific units."
                }
            }
        },
        "processingType": {
            "$id": "#/definitions/processingType",
            "type": "object",
            "title": "Processing Type",
            "description": "Information about the processing type such as pipeline and sequencing directives.",
            "properties": {
                "pipeline": {
                    "title": "Pipeline",
                    "description": "The Pipeline type identifies the sequence or tree of actions to process the sequencing data.",
                    "type": "object",
                    "properties": {
                        "pipeSection": {
                            "type": "array",
                            "title": "Pipe Section",
                            "items": {
                                "type": "object",
                                "required": [
                                    "stepIndex",
                                    "prevStepIndex",
                                    "program",
                                    "version"
                                ],
                                "properties": {
                                    "stepIndex": {
                                        "type": "string",
                                        "description": "Lexically ordered value that allows for the pipe section to be hierarchically ordered. The primitive data type is used to allow for pipe sections to be inserted later on.",
                                        "title": "Step Index"
                                    },
                                    "prevStepIndex": {
                                        "oneOf": [
                                            {
                                                "title": "Float value",
                                                "type": "string"
                                            },
                                            {
                                                "title": "Null value",
                                                "type": "null"
                                            }
                                        ],
                                        "description": "stepIndex of the previous step in the workflow. Set Null if the first pipe section.",
                                        "title": "Prev Step Index"
                                    },
                                    "program": {
                                        "type": "string",
                                        "description": "Name of the program or process for primary analysis. This may include a test or condition that leads to branching in the workflow.",
                                        "title": "Program"
                                    },
                                    "version": {
                                        "type": "string",
                                        "description": "Version of the program or process for primary analysis. ",
                                        "title": "Version"
                                    },
                                    "notes": {
                                        "type": "string",
                                        "description": "Notes about the program or process for primary analysis. ",
                                        "title": "Notes"
                                    },
                                    "sectionName": {
                                        "type": "string",
                                        "description": "If there are multiple sections specify the name of the processing pipeline section.",
                                        "title": "Section Name"
                                    }
                                }
                            }
                        }
                    }
                },
                "directives": {
                    "type": "object",
                    "title": "Directives",
                    "description": "Processing directives tell the Sequence Read Storage how to treat the input data, if any treatment is requested.",
                    "properties": {
                        "sampleDemuxDirective": {
                            "type": "object",
                            "description": "Tells the Sequence Read Storage who will execute the sample demultiplexing operation.",
                            "title": "Sample Demux Directive",
                            "properties": {
                                "leaveAsPool": {
                                    "type": "string",
                                    "description": "There shall be no sample de-multiplexing at the level of assigning individual reads to sample pool members.",
                                    "title": "Leave As Pool"
                                },
                                "submitterDemultiplexed": {
                                    "type": "string",
                                    "description": "The submitter has assigned individual reads to sample pool members by providing individual files containing reads with the same member assignment.",
                                    "title": "Submitter Demultiplexed"
                                }
                            }
                        }
                    }
                }
            }
        },
        "identifiers": {
            "$id": "#/definitions/identifiers",
            "title": "Identifiers",
            "description": "Identifiers to be used in the International Nucleotide Sequence Database Collaboration (INSDC) namespace.",
            "type": "object",
            "properties": {
                "primaryId": {
                    "type": "string",
                    "description": "A primary identifier in the INSDC namespace.",
                    "title": "Primary Id"
                },
                "secondaryId": {
                    "type": "string",
                    "description": "A secondary identifier in the INSDC namespace.",
                    "title": "Secondary Id"
                },
                "uuid": {
                    "type": "string",
                    "description": "A universally unique identifier that requires no namespace.",
                    "title": "UUID"
                },
                "externalId": {
                    "type": "object",
                    "title": "External Id",
                    "description": "An identifier from a public non-INSDC resource.",
                    "properties": {
                        "namespace": {
                            "type": "string",
                            "title": "Namespace"
                        },
                        "value": {
                            "type": "string",
                            "title": "Identifier"
                        }
                    }
                },
                "submitterId": {
                    "type": "object",
                    "title": "Submitter Id",
                    "description": "A submitter provided identifier.",
                    "properties": {
                        "namespace": {
                            "type": "string",
                            "title": "Namespace"
                        },
                        "value": {
                            "type": "string",
                            "title": "Identifier"
                        }
                    }
                }
            }
        },
        "reference": {
            "$id": "#/definitions/reference",
            "additionalProperties": true,
            "type": "object",
            "properties": {
                "accessionId": {
                    "type": "string",
                    "description": "Identifies a record by its accession. The scope of resolution is the entire Storage.",
                    "title": "Accession Id"
                },
                "refname": {
                    "type": "string",
                    "description": "Identifies an object by name within the namespace defined by attribute refcenter",
                    "title": "Record name"
                },
                "refcenter": {
                    "type": "string",
                    "description": "The namespace of the attribute refname.",
                    "title": "Center Namespace"
                },
                "identifiers": {
                    "$ref": "#/definitions/identifiers"
                }
            }
        },
        "file": {
            "$id": "#/definitions/file",
            "type": "object",
            "title": "File",
            "required": [
                "filename",
                "filetype",
                "checksumMethod",
                "checksum"
            ],
            "properties": {
                "filename": {
                    "type": "string",
                    "description": "The name or relative path name of a run data file.",
                    "title": "File Name"
                },
                "filetype": {
                    "type": "string",
                    "description": "The Run data file model/type.",
                    "title": "File Type",
                    "enum": [
                        "agp",
                        "bai",
                        "bam",
                        "bcf",
                        "bed",
                        "BioNano native",
                        "chromosome list",
                        "crai",
                        "cram",
                        "fasta",
                        "fastq",
                        "flatfile",
                        "gff",
                        "info",
                        "Kallisto native",
                        "manifest",
                        "phenotype file",
                        "readme file",
                        "sample list",
                        "sff",
                        "sra",
                        "srf",
                        "tab",
                        "tabix",
                        "unlocalised list",
                        "vcf aggregate",
                        "vcf",
                        "wig",
                        "other"
                    ]
                },
                "checksumMethod": {
                    "type": "string",
                    "title": "Checksum Method",
                    "description": "Checksum method used MD5 or SHA-256.",
                    "enum": [
                        "MD5",
                        "SHA-256"
                    ]
                },
                "readLabel": {
                    "title": "Read Label",
                    "description": "The Read Label can associate a certain file to a certain read label defined in the spot descriptor.",
                    "type": "string"
                },
                "readType": {
                    "title": "Read Type",
                    "description": "Identifies a record by its accession. The scope of resolution is the entire Storage.",
                    "type": "string",
                    "enum": [
                        "cell_barcode",
                        "feature_barcode",
                        "paired",
                        "sample_barcode",
                        "single",
                        "umi_barcode",
                        "Other"
                    ]
                },
                "checksum": {
                    "type": "string",
                    "description": "Checksum of uncompressed file.",
                    "title": "Checksum"
                },
                "unencryptedChecksum": {
                    "type": "string",
                    "description": "Checksum of un-encrypted file (used in conjunction with checksum of encrypted file).",
                    "title": "Un-encrypted Checksum"
                }
            }
        }
    },
    "type": "object",
    "description": "A Run contains a group of reads generated for a particular experiment.",
    "required": [
        "experimentRef"
    ],
    "properties": {
        "title": {
            "title": "Run Title",
            "description": "Title of the Run as would be used to identify it in reference to the Study and Dataset.",
            "type": "string"
        },
        "description": {
            "title": "Run Description",
            "description": "Free-form text describing the Run and any relevant information.",
            "type": "string"
        },
        "runType": {
            "title": "Run Type",
            "type": "object",
            "description": "Type of Run.",
            "properties": {
                "referenceAlignment": {
                    "type": "object",
                    "title": "Reference Alignment",
                    "additionalProperties": true,
                    "properties": {
                        "assembly": {
                            "type": "object",
                            "title": "Reference assembly details",
                            "oneOf": [
                                {
                                    "type": "object",
                                    "title": "Standard",
                                    "description": "A standard genome assembly.",
                                    "required": [
                                        "accession"
                                    ],
                                    "properties": {
                                        "refname": {
                                            "type": "string",
                                            "description": "A recognized name for the genome assembly.",
                                            "title": "Reference name"
                                        },
                                        "accession": {
                                            "type": "string",
                                            "description": "Accession.version with version being mandatory.",
                                            "title": "Accession.version"
                                        }
                                    }
                                },
                                {
                                    "type": "object",
                                    "title": "Custom",
                                    "description": "Other genome assembly.",
                                    "required": [
                                        "description"
                                    ],
                                    "properties": {
                                        "label": {
                                            "type": "string",
                                            "title": "Label",
                                            "description": "Text label to display for the link."
                                        },
                                        "url": {
                                            "type": "string",
                                            "title": "URL",
                                            "description": "The internet service link (http(s), ftp) etc.",
                                            "pattern": "^(https?|ftp)://"
                                        },
                                        "description": {
                                            "type": "string",
                                            "title": "Description"
                                        }
                                    }
                                }
                            ]
                        },
                        "sequence": {
                            "type": "array",
                            "title": "Sequence",
                            "description": "Reference sequence details.",
                            "items": {
                                "type": "object",
                                "required": [
                                    "accession"
                                ],
                                "additionalProperties": true,
                                "properties": {
                                    "label": {
                                        "type": "string",
                                        "description": "This is how Reference Sequence is labeled in submission file(s). It is equivalent to  SQ label in BAM. Optional when submitted file uses INSDC accession.version.",
                                        "title": "Label"
                                    },
                                    "accession": {
                                        "type": "string",
                                        "description": "Accession.version with version being mandatory",
                                        "title": "Accession.version"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "runDate": {
            "title": "Run Date",
            "description": "Date when the Run took place.",
            "type": "string",
            "format": "date-time"
        },
        "runCenter": {
            "title": "Run Center",
            "description": "If applicable, the name of the contract sequencing center that executed the Run.",
            "type": "string"
        },
        "experimentRef": {
            "title": "Experiment Reference",
            "description": "Identifies the associated experiment.",
            "maxItems": 1,
            "type": "array",
            "items": {
                "$ref": "#/definitions/reference"
            }
        },
        "spotDescriptor": {
            "description": "The spot descriptor specifies how to decode the individual reads of interest from the monolithic spot sequence. The spot descriptor contains aspects of the experimental design, platform, and processing information. There will be two methods of specification: one will be an index into a table of typical decodings, the other being an exact specification. This construct is needed for loading data and for interpreting the loaded runs. It can be omitted if the loader can infer read layout (from multiple input files or from one input files).",
            "title": "Spot Descriptor",
            "type": "object",
            "required": [
                "readSpec"
            ],
            "properties": {
                "spotLength": {
                    "title": "Spot Length",
                    "description": "Number of base/color calls, cycles, or flows per spot (raw sequence length or flow length including all application and technical tags and mate pairs, but not including gap lengths). This value will be platform dependent, library dependent, and possibly run dependent. Variable length platforms will still have a constant flow/cycle length.",
                    "type": "number",
                    "minimum": 0
                },
                "readSpec": {
                    "type": "object",
                    "title": "Read Specification",
                    "properties": {
                        "readIndex": {
                            "title": "Read Index",
                            "description": "Read Index starts at 0 and is incrementally increased for each sequential read_spec within a spot decode specification",
                            "type": "number",
                            "minimum": 0
                        },
                        "readLabel": {
                            "title": "Read Label",
                            "description": "Read Label is a name for this tag, and can be used to on output to determine read name, for example F or R.",
                            "type": "string"
                        },
                        "readClass": {
                            "title": "Read Class",
                            "type": "string",
                            "enum": [
                                "Application Read",
                                "Technical Read"
                            ]
                        },
                        "readType": {
                            "title": "Read Type",
                            "description": "",
                            "type": "string",
                            "enum": [
                                "cell_barcode",
                                "feature_barcode",
                                "paired",
                                "sample_barcode",
                                "single",
                                "umi_barcode",
                                "Other"
                            ]
                        },
                        "relativeOrder": {
                            "type": "object",
                            "title": "Relative Order",
                            "description": "The read is located beginning at the offset or cycle relative to another read. This choice is appropriate for example when specifying a read that follows a variable length expected sequence(s).",
                            "properties": {
                                "followsReadIndex": {
                                    "title": "Follows Read Index",
                                    "type": "number",
                                    "description": "Specify the read index that precedes this read.",
                                    "minimum": 0
                                },
                                "precedesReadIndex": {
                                    "title": "Precedes Read Index",
                                    "description": "Specify the read index that follows this read.",
                                    "type": "number",
                                    "minimum": 0
                                }
                            }
                        },
                        "baseCoord": {
                            "title": "Base Coordinate",
                            "description": "The location of the read start in terms of base count (1 is beginning of spot).",
                            "type": "number"
                        },
                        "expectedBaseCallTable": {
                            "title": "Expected Base Call Table",
                            "description": " A set of choices of expected base calls for a current read. Read will be zero-length if none is found.",
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "baseCall": {
                                        "type": "string",
                                        "description": "Element's body contains a basecall, attribute provide description of this read meaning as well as matching rules.",
                                        "title": "Base Call"
                                    },
                                    "readGroupTag": {
                                        "type": "string",
                                        "description": "When match occurs, the read will be tagged with this group membership.",
                                        "title": "Read Group Tag"
                                    },
                                    "minMatch": {
                                        "type": "number",
                                        "description": " Minimum number of matches to trigger identification.",
                                        "minimum": 0,
                                        "title": "Min Match"
                                    },
                                    "maxMisMatch": {
                                        "description": "Maximum number of mismatches.",
                                        "type": "number",
                                        "minimum": 0,
                                        "title": "Max MisMatch"
                                    },
                                    "matchEdge": {
                                        "description": "Where the match should occur. Changes the rules on how min_match and max_mismatch are counted.",
                                        "type": "string",
                                        "title": "Match Edge"
                                    },
                                    "full": {
                                        "description": "Only @max_mismatch influences matching process.",
                                        "type": "string",
                                        "title": "Full"
                                    },
                                    "start": {
                                        "description": "Both matches and mismatches are counted. When @max_mismatch is exceeded - it is not a match. When @min_match is reached - match is declared. ",
                                        "type": "string",
                                        "title": "Start"
                                    },
                                    "end": {
                                        "description": "Both matches and mismatches are counted. When @max_mismatch is exceeded - it is not a match. When @min_match is reached - match is declared.",
                                        "type": "string",
                                        "title": "End"
                                    },
                                    "defaultLength": {
                                        "description": "Specify whether the spot should have a default length for this tag if the expected base cannot be matched.",
                                        "type": "number",
                                        "minimum": 0,
                                        "title": "Default Length"
                                    },
                                    "baseCoord": {
                                        "description": "Specify an optional starting point for tag (base offset from 1).",
                                        "type": "number",
                                        "minimum": 0,
                                        "title": "Base Coordinate"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "platform": {
            "title": "Platform / Instrument",
            "description": "The PLATFORM record selects which sequencing platform and platform-specific runtime parameters. This will be determined by the Center.",
            "type": "string",
            "enum": [
                "454 GS 20",
                "454 GS FLX Titanium",
                "454 GS FLX",
                "454 GS FLX+",
                "454 GS Junior",
                "454 GS",
                "AB 310 Genetic Analyzer",
                "AB 3130 Genetic Analyzer",
                "AB 3130xL Genetic Analyzer",
                "AB 3500 Genetic Analyzer",
                "AB 3500xL Genetic Analyzer",
                "AB 3730 Genetic Analyzer",
                "AB 3730xL Genetic Analyzer",
                "AB 5500 Genetic Analyzer",
                "AB 5500xl Genetic Analyzer",
                "AB 5500xl-W Genetic Analysis System",
                "AB SOLiD 3 Plus System",
                "AB SOLiD 4 System",
                "AB SOLiD 4hq System",
                "AB SOLiD PI System",
                "AB SOLiD System 2.0",
                "AB SOLiD System 3.0",
                "AB SOLiD System",
                "BGISEQ-50",
                "BGISEQ-500",
                "Complete Genomics",
                "GridION",
                "Helicos HeliScope",
                "HiSeq X Five",
                "HiSeq X Ten",
                "Illumina Genome Analyzer II",
                "Illumina Genome Analyzer IIx",
                "Illumina Genome Analyzer",
                "Illumina HiScanSQ",
                "Illumina HiSeq 1000",
                "Illumina HiSeq 1500",
                "Illumina HiSeq 2000",
                "Illumina HiSeq 2500",
                "Illumina HiSeq 3000",
                "Illumina HiSeq 4000",
                "Illumina HiSeq X",
                "Illumina MiniSeq",
                "Illumina MiSeq",
                "Illumina NovaSeq 6000",
                "Ion GeneStudio S5 Plus",
                "Ion GeneStudio S5 Prime",
                "Ion GeneStudio S5",
                "Ion Torrent Genexus",
                "Ion Torrent PGM",
                "Ion Torrent Proton",
                "Ion Torrent S5 XL",
                "Ion Torrent S5",
                "MGISEQ-2000RS",
                "MinION",
                "NextSeq 500",
                "NextSeq 550",
                "PacBio RS II",
                "PacBio RS",
                "PromethION",
                "Sequel II",
                "Sequel",
                "unspecified"
            ]
        },
        "processing": {
            "title": "Processing",
            "type": "object",
            "$ref": "#/definitions/processingType"
        },
        "files": {
            "type": "array",
            "title": "Files",
            "description": "Data files associated with the Run.",
            "items": {
                "$ref": "#/definitions/file"
            }
        },
        "runLinks": {
            "type": "array",
            "title": "Run Links",
            "description": "Links to resources related to this experiment or experiment set (publication, datasets, online databases). Used to encode URL links, Entrez links, and xref DB links. ",
            "items": {
                "$ref": "#/definitions/Links"
            }
        },
        "runAttributes": {
            "type": "array",
            "title": "Run Attributes",
            "description": "Properties and attributes of the data set. These can be entered as free-form tag-value pairs. Submitters may be asked to follow a community established ontology when describing the work.",
            "items": {
                "$ref": "#/definitions/runAttribute"
            }
        }
    }
}
