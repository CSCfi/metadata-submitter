matrix:
- name: markdown
  aspell:
    lang: en
    ignore-case: true
    # Make compounds words valid
    run-together: true
    # Min compound word length
    run-together-min: 2
    # Max compound words
    run-together-limit: 4
  dictionary:
    wordlists:
    - docs/dictionary/wordlist.txt
    encoding: utf-8
  pipeline:
  - pyspelling.filters.context:
      context_visible_first: true
      delimiters:
      # Ignore text between inline back ticks as this is code or highlight words
      - open: '(?P<open>`+)'
        close: '(?P=open)'
  # Markdown filter returns a single SourceText object containing the text as HTML
  - pyspelling.filters.markdown:
  # Attributes not specified: not included in the output
  - pyspelling.filters.html:
  sources:
  - '{DEPLOYMENT,README}.md'
  - 'docs/*.md'
  - '.github/**/*.md'
  default_encoding: utf-8

- name: rst
  aspell:
    lang: en
    ignore-case: true
    run-together: true
    run-together-min: 2
    run-together-limit: 4
  dictionary:
    wordlists:
    - docs/dictionary/wordlist.txt
    encoding: utf-8
  pipeline:
  - pyspelling.filters.context:
      context_visible_first: true
      delimiters:
      # Ignore text between <>, e.g. urls
      - open: '<'
        close: '>'
  sources:
  - 'docs/*.rst'
  default_encoding: utf-8

- name: json-schemas
  aspell:
    lang: en
    ignore-case: true
    run-together: true
    run-together-min: 2
    run-together-limit: 5
  dictionary:
    wordlists:
    - docs/dictionary/wordlist.txt
  pipeline:
  - pyspelling.filters.context:
      context_visible_first: true
      escapes: '\\[\\`~]'
      delimiters:
      # Ignore Pāli word as it cannot be added to dictionary
      - open: '(Pāli)'
        close: '-'
  sources:
  - metadata_backend/helpers/schemas/*.json
  default_encoding: utf-8

- name: python
  sources:
  - '{metadata_backend,scripts}/**/*.py'
  aspell:
    lang: en
    ignore-case: true
    run-together: true
    run-together-min: 2
    run-together-limit: 4
  dictionary:
    wordlists:
    - docs/dictionary/wordlist.txt
  pipeline:
  # Only spellcheck docstrings and comments
  - pyspelling.filters.python:
      strings: false
      comments: true
      docstrings: true
  - pyspelling.filters.context:
      context_visible_first: true
      delimiters:
      # Ignore lint ignores
      - open: '^(?: *(?:noqa\b|nosec\b))'
        close: '$'
  # Ignore urls
  - pyspelling.filters.url:
