openapi: 3.1.1
info:
  description: |-
    This is a definition of CSC Metadata Submitter API.
  version: 2025.4.0
  title: SD Submit API
  license:
    name: MIT License
    url: "https://opensource.org/license/mit"
tags:
  - name: Submission
    description: Endpoints used in submission
  - name: Query
    description: Endpoints used for data retrieval
  - name: Manage
    description: Endpoints used for managing data
  - name: Taxonomy
    description: Built-in API for autocompleting taxonomy names/ids in the UI
paths:
  /v1/schemas:
    get:
      tags:
        - Query
      summary: List of available schemas
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SchemasList"
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/404NotFound"
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/401Unauthorized"
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/403Forbidden"
  /v1/schemas/{schema}:
    get:
      tags:
        - Query
      summary: Retrieve JSON schema by its name
      parameters:
        - name: schema
          in: path
          description: Name of the schema.
          schema:
            type: string
          required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/400BadRequest"
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/401Unauthorized"
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/403Forbidden"
  /v1/workflows/{workflow}/projects/{projectId}/submissions:
    post:
      tags:
        - Submission
      summary: Create a submission given workflow-specific documents
      parameters:
        - name: workflow
          in: path
          description: The submission workflow name
          schema:
            type: string
          required: true
        - name: projectId
          in: path
          description: The project ID
          schema:
            type: string
          required: true
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema: { }
      responses:
        200:
          description: Created submission
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Submission"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/400BadRequest"
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/401Unauthorized"
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/403Forbidden"
  /v1/submissions/{submissionId}/objects:
    get:
      tags:
        - Object
      summary: List metadata objects in a submission
      parameters:
        - name: submissionId
          in: path
          description: The submission ID or name. Name requires project ID.
          schema:
            type: string
          required: true
        - name: projectId
          in: query
          description: The project ID. Required to submission name.
          schema:
            type: string
        - name: objectType
          in: query
          description: Filter by object type (optional)
          schema:
            type: string
        - name: schemaType
          in: query
          description: Filter by schema type (optional)
          schema:
            type: string
      responses:
        200:
          description: OK - List of metadata objects
          content:
            application/json:
              schema: { }
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/401Unauthorized"
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/403Forbidden"
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/404NotFound"
  /v1/submissions/{submissionId}/objects/docs:
    get:
      tags:
        - Object
      summary: Get metadata documents in a submission
      parameters:
        - name: submissionId
          in: path
          description: The submission ID or name. Name requires project ID.
          schema:
            type: string
          required: true
        - name: projectId
          in: query
          description: The project ID. Required to submission name.
          schema:
            type: string
        - name: objectType
          in: query
          description: Filter by object type
          schema:
            type: string
        - name: schemaType
          in: query
          description: Filter by schema type
          schema:
            type: string
        - name: objectId
          in: query
          description: Filter by object ID
          schema:
            type: string
        - name: objectName
          in: query
          description: Filter by object name
          schema:
            type: string
      responses:
        200:
          description: OK - Metadata documents
          content:
            application/json:
              schema: { }
            text/xml:
              schema:
                type: string
                format: binary
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/401Unauthorized"
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/403Forbidden"
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/404NotFound"
  /v1/projects/{projectId}/buckets:
    get:
      tags:
        - Query
      summary: List all buckets in a specific project
      parameters:
        - name: projectId
          in: path
          description: ID of the project.
          schema:
            type: string
          required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/400BadRequest"
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/401Unauthorized"
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/403Forbidden"
  /v1/projects/{projectId}/buckets/{bucket}/files:
    get:
      tags:
        - Query
      summary: List all files in a specific bucket of a project
      parameters:
        - name: projectId
          in: path
          description: ID of the project.
          schema:
            type: string
          required: true
        - name: bucket
          in: path
          description: Name of the bucket.
          schema:
            type: string
          required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                description: List of files in the bucket
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/400BadRequest"
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/401Unauthorized"
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/403Forbidden"
  /v1/rems:
    get:
      tags:
        - Query
      summary: Retrieve data from REMS
      parameters:
        - name: language
          in: query
          description: language code to retrieve the results in. Falls back and defaults to English ("en")
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/REMS"
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/401Unauthorized"
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/403Forbidden"
  /v1/submit/{workflow}:
    post:
      tags:
        - Submission
      summary: XML submission endpoint, which will also trigger validation
      parameters:
        - name: workflow
          in: path
          description: Name of submission workflow.
          schema:
            type: string
          required: true
        - name: submission
          in: query
          schema:
            type: string
          description: The submission ID where object belongs to.
          required: true
          example: "submission=12345"
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: string
              format: binary
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ObjectsCreated"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/400BadRequest"
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/401Unauthorized"
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/403Forbidden"
  /v1/workflows:
    get:
      tags:
        - Query
      summary: List of available workflows
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                description: Workflow name as key, and description as value
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/401Unauthorized"
  /v1/workflows/{workflow}:
    get:
      tags:
        - Query
      summary: Retrieve a workflow definition by its name
      parameters:
        - name: workflow
          in: path
          description: Name of the workflow
          schema:
            type: string
          required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/401Unauthorized"
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/404NotFound"
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/403Forbidden"
  /v1/submissions:
    get:
      tags:
        - Query
      summary: List of submissions available for the user
      parameters:
        - in: query
          name: projectId
          schema:
            type: string
          description: ID of the project the submission belongs to
          required: true
        - in: query
          name: page
          schema:
            type: string
          description: Page number
        - in: query
          name: per_page
          schema:
            type: string
          description: Results per page
        - in: query
          name: published
          schema:
            type: string
          example: true
          description: Return submissions based on the submission published value. Should be 'true' or 'false'
        - in: query
          name: name
          schema:
            type: string
          example: test submission
          description: Return submissions containing filtered string[s] in their name
        - in: query
          name: date_created_start
          schema:
            type: string
          example: "2015-01-01"
          description: |
            Returns submissions created between provided dates.
            MUST be used with parameter 'date_created_end'.
        - in: query
          name: date_created_end
          schema:
            type: string
          example: "2015-12-31"
          description: |
            Returns submissions created between provided dates.
            MUST be used with parameter 'date_created_start'.
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SubmissionList"
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/401Unauthorized"
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/403Forbidden"
    post:
      tags:
        - Submission
      summary: Create a new submission for the user
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - description
                - projectId
              properties:
                name:
                  type: string
                description:
                  type: string
                projectId:
                  type: string
      responses:
        201:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SubmissionCreated"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/400BadRequest"
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/401Unauthorized"
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/403Forbidden"
  /v1/submissions/{submissionId}:
    get:
      tags:
        - Query
      summary: Object submission by its submission ID
      parameters:
        - name: submissionId
          in: path
          description: ID of the object submission.
          schema:
            type: string
          required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Submission"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/400BadRequest"
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/401Unauthorized"
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/403Forbidden"
    patch:
      tags:
        - Submission
      summary: Update information of a submission object
      requestBody:
        content:
          application/json:
            schema:
              type: object
              description: JSON object containing a new 'name' and / or 'description'.
              properties:
                name:
                  type: string
                  description: Name of the submission.
                  example: "Research project submission #2"
                description:
                  type: string
                  description: A longer description of the submission.
                  example: "As part of the research project we produced this submission with our initial research results."

      parameters:
        - name: submissionId
          in: path
          description: ID of the object submission.
          schema:
            type: string
          required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SubmissionCreated"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/400BadRequest"
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/401Unauthorized"
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/403Forbidden"
        405:
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/405MethodNotAllowed"
    delete:
      tags:
        - Manage
      summary: Delete an object submission with a specified submission ID
      parameters:
        - name: submissionId
          in: path
          description: ID of the object submission.
          schema:
            type: string
          required: true
      responses:
        204:
          description: No Content
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/400BadRequest"
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/401Unauthorized"
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/403Forbidden"
        405:
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/405MethodNotAllowed"
  /v1/submissions/{submissionId}/doi:
    patch:
      tags:
        - Submission
      summary: Update DOI for the submission with a specified submission ID
      parameters:
        - name: submissionId
          in: path
          description: ID of the object submission.
          schema:
            type: string
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DoiInfo"
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SubmissionCreated"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/400BadRequest"
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/401Unauthorized"
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/403Forbidden"
        405:
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/405MethodNotAllowed"
  /v1/submissions/{submissionId}/rems:
    patch:
      tags:
        - Submission
      summary: Update REMS (DAC) for the submission with a specified submission ID
      parameters:
        - name: submissionId
          in: path
          description: ID of the object submission.
          schema:
            type: string
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/REMS_DAC"
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SubmissionCreated"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/400BadRequest"
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/401Unauthorized"
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/403Forbidden"
        405:
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/405MethodNotAllowed"
  /v1/submissions/{submissionId}/files:
    get:
      tags:
        - Query
      summary: Retrieve all files with detailed info specific to a submission
      parameters:
        - name: submissionId
          in: path
          description: ID of the object submission.
          schema:
            type: string
          required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/400BadRequest"
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/401Unauthorized"
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/403Forbidden"
  /v1/submissions/{submissionId}/bucket:
    patch:
      tags:
        - Submission
      summary: Update linked bucket name associated with a submission
      parameters:
        - name: submissionId
          in: path
          description: ID of the object submission.
          schema:
            type: string
          required: true
      requestBody:
        content:
          application/json:
            schema:
              type: object
              description: JSON object containing a new bucket.
              properties:
                bucket:
                  type: string
                  description: Name of the linked bucket.
                  example: "bucketName"
      responses:
        204:
          description: No Content
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/400BadRequest"
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/401Unauthorized"
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/403Forbidden"
  /v1/submissions/{submissionId}/ingest:
    post:
      tags:
        - Submission
      summary: Start the data ingestion process when the submission is ready
      parameters:
        - name: submissionId
          in: path
          description: ID of the submission.
          schema:
            type: string
          required: true
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - username
                - files
              properties:
                username:
                  type: string
                  description: Whitelisted username from inbox
                  example: "test_user"
                files:
                  type: array
                  items:
                    $ref: "#/components/schemas/FilesForIngestion"
      responses:
        204:
          description: No Content
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/400BadRequest"
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/401Unauthorized"
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/403Forbidden"
  /v1/publish/{submissionId}:
    patch:
      tags:
        - Submission
      summary: Update object submission into published state
      parameters:
        - name: submissionId
          in: path
          description: ID of the object submission.
          schema:
            type: string
          required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SubmissionCreated"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/400BadRequest"
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/401Unauthorized"
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/403Forbidden"
        405:
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/405MethodNotAllowed"
        502:
          description: Bad Gateway
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/502BadGateway"
        504:
          description: Gateway Timeout
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/504GatewayTimeout"
  /v1/announce/{submissionId}:
    patch:
      tags:
        - Submission
      summary: Update object submission into published state for Bigpicture case
      parameters:
        - name: submissionId
          in: path
          description: ID of the object submission.
          schema:
            type: string
          required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SubmissionCreated"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/400BadRequest"
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/401Unauthorized"
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/403Forbidden"
        405:
          description: Method Not Allowed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/405MethodNotAllowed"
        502:
          description: Bad Gateway
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/502BadGateway"
        504:
          description: Gateway Timeout
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/504GatewayTimeout"
  /v1/users/{userId}:
    get:
      tags:
        - Query
      summary: User object by its user ID
      parameters:
        - name: userId
          in: path
          description: ID of the user object.
          schema:
            type: string
          required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/400BadRequest"
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/401Unauthorized"
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/403Forbidden"
    delete:
      tags:
        - Manage
      summary: Delete an user object with a specified user ID
      parameters:
        - name: userId
          in: path
          description: ID of the user object.
          schema:
            type: string
          required: true
      responses:
        204:
          description: No Content
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/400BadRequest"
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/401Unauthorized"
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/403Forbidden"
  /v1/users/{userId}/key:
    get:
      tags:
        - Query
      summary: Generate new signing key for personal token
      parameters:
        - name: userId
          in: path
          description: ID of the user object.
          schema:
            type: string
          required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/400BadRequest"
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/401Unauthorized"
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/403Forbidden"
  /v1/taxonomy:
    get:
      tags:
        - Taxonomy
      summary: Get results of taxonomy search by id or name
      parameters:
        - name: search
          in: query
          description: Search query that is a partial or full id, scientific or common name
          schema:
            type: string
          required: true
        - name: results
          in: query
          description: Amount of search results to retrieve (by default 10)
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/TaxonomyResult"
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/400BadRequest"
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/401Unauthorized"
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/403Forbidden"

components:
  schemas:
    ErrorModel:
      type: object
      description: JSON Problem object (IETF RFC 7807) for HTTP (4xx, 5xx) error response body
      required:
        - title
        - detail
        - status
      properties:
        type:
          type: string
          description: reference to a human readable documentation of the problem type
        title:
          type: string
          description: Short message, human readable
        detail:
          type: string
          description: details about what error occurred while processing the request
        status:
          type: integer
          description: HTTP status code
        instance:
          type: string
          description: reference to the specific occurrence of the problem
    400BadRequest:
      allOf:
        - $ref: "#/components/schemas/ErrorModel"
      properties:
        title:
          example: Bad Request
        detail:
          example: the current request could not be processed as the submitted file was not valid
    404NotFound:
      allOf:
        - $ref: "#/components/schemas/ErrorModel"
      properties:
        title:
          example: Not Found
        detail:
          example: the current endpoint does not retrieve any results
    401Unauthorized:
      allOf:
        - $ref: "#/components/schemas/ErrorModel"
      properties:
        title:
          example: Unauthorized
        detail:
          example: the request cannot be authorized
    403Forbidden:
      allOf:
        - $ref: "#/components/schemas/ErrorModel"
      properties:
        title:
          example: Forbidden
        detail:
          example: the request does not contain the right permissions
    405MethodNotAllowed:
      allOf:
        - $ref: "#/components/schemas/ErrorModel"
      properties:
        title:
          example: Method Not Allowed
        detail:
          example: Submission is already published and cannot be modified or deleted.
    502BadGateway:
      allOf:
        - $ref: "#/components/schemas/ErrorModel"
      properties:
        title:
          example: Bad Gateway
        detail:
          example: "Metax error: metax service provider couldn't process request"
    504GatewayTimeout:
      allOf:
        - $ref: "#/components/schemas/ErrorModel"
      properties:
        title:
          example: Gateway Timeout
        detail:
          example: "Metax error: could not reach the metax service provider"
    SchemasList:
      type: array
      items:
        type: object
        required:
          - title
          - detail
        properties:
          title:
            type: string
            description: Short message, human readable
            example: Sample
          detail:
            type: string
            description: Description of the schema
            example: Sample defines an isolate of sequenceable material upon which sequencing experiments can be based.
          url:
            type: string
            description: URL pointing to the schema source
            example: https://github.com/enasequence/schema/blob/master/src/main/resources/uk/ac/ebi/ena/sra/schema/SRA.sample.xsd
    Object:
      type: object
      required:
        - accessionId
        - publishedDate
        - dateCreated
        - dateUpdated
      additionalProperties: true
      properties:
        accessionId:
          type: string
          description: accession id generated to identify an object
        publishedDate:
          type: string
          description: datetime in ISO8601 format
        dateCreated:
          type: string
          description: datetime in ISO8601 format
        dateUpdated:
          type: string
          description: datetime in ISO8601 format
        accessType:
          type: string
          enum: [ "PUBLIC", "REGISTERED", "CONTROLLED" ]
          description: in order to determine if a dataset requires a user to be registered or it can be public or it requires special permission or controlled access
    ObjectList:
      type: object
      required:
        - objects
        - page
      properties:
        page:
          $ref: "#/components/schemas/Pagination"
        objects:
          type: array
          items:
            $ref: "#/components/schemas/Object"
    Pagination:
      type: object
      required:
        - page
        - size
        - totalPages
        - totalObjects
      properties:
        page:
          description: current page number
          type: integer
        size:
          type: integer
        totalPages:
          type: integer
        totalObjects:
          type: integer
    ObjectCreated:
      type: object
      required:
        - accessionId
      additionalProperties: false
      properties:
        accessionId:
          type: string
          description: accession id generated to identify an object
    ObjectsCreated:
      type: array
      items:
        type: object
        required:
          - schema
          - accessionId
        additionalProperties: false
        properties:
          accessionId:
            type: string
            description: Accession id generated to identify an object
          schema:
            type: string
            description: type of schema this Accession ID relates to and was added in submit
    ObjectValidated:
      type: object
      required:
        - isValid
      properties:
        isValid:
          type: boolean
          description: True or false if valid. If false, a detail key is included that details the error
        detail:
          type: object
          description: details of the error if there were some
          properties:
            reason:
              type: string
              description: reason that caused the validation error
            instance:
              type: string
              description: specific element(s) where error occurred

    SubmissionCreated:
      type: object
      required:
        - submissionId
      properties:
        submissionId:
          type: string
          description: Custom generated ID for the object submission.
        published:
          type: object
          description: Integrated service as key (Datacite, Metax, REMS), and whether they are "published" or "failed" as value
    Submission:
      type: object
      required:
        - name
        - description
        - projectId
      additionalProperties: false
      properties:
        projectId:
          type: string
          description: Project ID this submission belongs to
        submissionId:
          type: string
          description: Submission id
        name:
          type: string
          description: Submission name
        text_name:
          type: string
          description: Searchable Submission Name, used for indexing
        description:
          type: string
          description: Submission description
        dateCreated:
          type: integer
          description: Unix time stamp of creation, used for indexing
        datePublished:
          type: integer
          description: Unix time stamp of publishing, used for indexing
        lastModified:
          type: integer
          description: Unix time stamp of when objects in submission were last modified
        published:
          type: boolean
          description: If submission is published or not
        doiInfo:
          $ref: "#/components/schemas/DoiInfo"
        extraInfo:
          type: object
          additionalProperties: false
          properties:
            studyIdentifier:
              type: object
              description: DOI id generated according to DOI recommendations
              required:
                - identifier
                - url
              properties:
                identifier:
                  type: object
                  description: identifier object
                  required:
                    - identifierType
                    - doi
                  properties:
                    identifierType:
                      type: string
                      description: Type of identifier (= DOI)
                    doi:
                      type: string
                      description: A persistent identifier for a resource
                url:
                  type: string
                  description: URL of the digital location of the object
                types:
                  type: object
                  description: "Type info of the resource. Multiple types can be listed: ResourceTypeGeneral, schemaOrg etc."
            datasetIdentifiers:
              type: array
              items:
                type: object
                required:
                  - identifier
                  - url
                properties:
                  identifier:
                    type: object
                    description: identifier object
                    required:
                      - identifierType
                      - doi
                    properties:
                      identifierType:
                        type: string
                        description: Type of identifier (= DOI)
                      doi:
                        type: string
                        description: A persistent identifier for a resource
                  url:
                    type: string
                    description: URL of the digital location of the object
                  types:
                    type: object
                    description: "Type info of the resource. Multiple types can be listed: ResourceTypeGeneral, schemaOrg etc."
            publisher:
              type: string
              description: Full name of publisher from Research Organization Registry
            publicationYear:
              type: integer
              description: Publication Year
            version:
              type: string
              description: Version number of the resource
        metadataObjects:
          type: array
          uniqueItems: true
          items:
            type: object
            required:
              - accessionId
              - schema
            properties:
              accessionId:
                type: string
                description: Accession id generated to identify an object
              schema:
                type: string
                description: type of schema this Accession ID relates to and was added in submit
              tags:
                type: object
                description: Different tags to describe the object.
                additionalProperties: true
                properties:
                  submissionType:
                    type: string
                    description: Type of submission
                    enum: [ "XML", "CSV", "Form" ]
              rems:
                type: object
                description: Preserved REMS information for each dataset
                additionalProperties: true
                properties:
                  url:
                    type: string
                    description: URL for application to apply access for dataset in REMS
                  resourceId:
                    type: string
                    description: REMS id of the resource created. Created automatically during the publication process
                  catalogueItemId:
                    type: string
                    description: REMS id of the catalogue created. Created automatically during the publication process
        drafts:
          type: array
          uniqueItems: true
          items:
            type: object
            required:
              - accessionId
              - schema
            additionalProperties: false
            properties:
              accessionId:
                type: string
                description: Accession id generated to identify an object
              schema:
                type: string
                description: type of schema this Accession ID relates to and was added in submit
              tags:
                type: object
                description: Different tags to describe the object.
                additionalProperties: true
                properties:
                  submissionType:
                    type: string
                    description: Type of submission
                    enum: [ "XML", "CSV", "Form" ]
    SubmissionList:
      type: object
      required:
        - page
        - submissions
      additionalProperties: false
      properties:
        page:
          $ref: "#/components/schemas/Pagination"
        submissions:
          type: array
          items:
            $ref: "#/components/schemas/Submission"
    User:
      type: object
      required:
        - userId
        - name
        - projects
      additionalProperties: false
      properties:
        userId:
          type: string
          description: User Id
        name:
          type: string
          description: User's Name
        projects:
          type: array
          items:
            type: object
            required:
              - projectId
              - projectNumber
            additionalProperties: false
            properties:
              projectId:
                type: string
                description: Internal accession ID for project
              projectNumber:
                type: string
                description: Human friendly project number received from AAI
    UserUpdated:
      type: object
      required:
        - userId
      properties:
        userId:
          type: string
          description: Custom generated ID for the user object.
    DoiInfo:
      required:
        - creators
        - subjects
        - keywords
      description: Datacite DOI Registration Information
      type: object
      properties:
        creators:
          description: The main researcher(s) involved in producing the data, or the
            author(s) of the publication.
          items:
            additionalProperties: true
            properties:
              affiliation:
                description: The organizational or institutional affiliation of the
                  creator. Upon filling the form with the organization or institution
                  suggestion will be made from Research Organization Registry (ROR)
                  Community API.
                items:
                  properties:
                    affiliationIdentifier:
                      description: URI location based on the URI scheme of the name
                        identifier this will be pre-filled based on https://ror.org/name.
                      type: string
                    affiliationIdentifierScheme:
                      description: Identifier scheme name. This will default to ROR.
                      type: string
                    name:
                      description: Name of the place of affiliation
                      type: string
                    schemeUri:
                      description: Name identifier scheme. This will default to https://ror.org/.
                      type: string
                  description: Affiliation Details
                  type: object
                type: array
                uniqueItems: true
              familyName:
                description: Family Name
                type: string
              givenName:
                description: Given Name
                type: string
              name:
                description: This field will be constructed based from Given Name and
                  Family Name.
                type: string
              nameIdentifiers:
                description: Uniquely identifies the creator, according to various schemas,
                  e.g. ORCID, ROR or ISNI. Use name identifier expressed as URL.
                items:
                  properties:
                    nameIdentifier:
                      description: URI location based on the URI scheme of the name
                        identifier e.g. https://orcid.org/nameIdentifier.
                      type: string
                    nameIdentifierScheme:
                      description: Identifier scheme name e.g. ORCID, ROR or ISNI.
                      type: string
                    schemeUri:
                      description: Depending on the name identifier scheme e.g. https://isni.org/
                        or https://orcid.org/ or https://ror.org/ or https://www.grid.ac/.
                      format: uri
                      type: string
                  description: Creator Name Identifier
                  type: object
                type: array
                uniqueItems: true
            required:
              - givenName
              - familyName
              - affiliation
            description: Main researcher(s) involved with data or the author(s) of the publication.
            type: object
          type: array
          uniqueItems: true
        subjects:
          description: Subject, keyword, classification code, or key phrase describing the resource.
            The accepted subject names are based on the field of science classification specified by OKM.
          items:
            additionalProperties: true
            properties:
              subject:
                enum:
                  - "1 - Natural sciences"
                  - "111 - Mathematics"
                  - "112 - Statistics and probability"
                  - "113 - Computer and information sciences"
                  - "114 - Physical sciences"
                  - "115 - Astronomy, Space science"
                  - "116 - Chemical sciences"
                  - "1171 - Geosciences"
                  - "1172 - Environmental sciences"
                  - "1181 - Ecology, evolutionary biology"
                  - "1182 - Biochemistry, cell and molecular biology"
                  - "1183 - Plant biology, microbiology, virology"
                  - "1184 - Genetics, developmental biology, physiology"
                  - "119 - Other natural sciences"
                  - "2 - Engineering and technology"
                  - "211 - Architecture"
                  - "212 - Civil and Construction engineering"
                  - "213 - Electronic, automation and communications engineering, electronics"
                  - "214 - Mechanical engineering"
                  - "215 - Chemical engineering"
                  - "216 - Materials engineering"
                  - "217 - Medical engineering"
                  - "218 - Environmental engineering"
                  - "219 - Environmental biotechnology"
                  - "220 - Industrial biotechnology"
                  - "221 - Nano-technology"
                  - "222 - Other engineering and technologies"
                  - "3 - Medical and health sciences"
                  - "3111 - Biomedicine"
                  - "3112 - Neurosciences"
                  - "3121 - Internal medicine"
                  - "3122 - Cancers"
                  - "3123 - Gynaecology and paediatrics"
                  - "3124 - Neurology and psychiatry"
                  - "3125 - Otorhinolaryngology, ophthalmology"
                  - "3126 - Surgery, anesthesiology, intensive care, radiology"
                  - "313 - Dentistry"
                  - "3141 - Health care science"
                  - "3142 - Public health care science, environmental and occupational health"
                  - "315 - Sport and fitness sciences"
                  - "316 - Nursing"
                  - "317 - Pharmacy"
                  - "318 - Medical biotechnology"
                  - "319 - Forensic science and other medical sciences"
                  - "4 - Agriculture and forestry"
                  - "4111 - Agronomy"
                  - "4112 - Forestry"
                  - "412 - Animal science, dairy science"
                  - "413 - Veterinary science"
                  - "414 - Agricultural biotechnology"
                  - "415 - Other agricultural sciences"
                  - "5 - Social sciences"
                  - "511 - Economics"
                  - "512 - Business and management"
                  - "513 - Law"
                  - "5141 - Sociology"
                  - "5142 - Social policy"
                  - "515 - Psychology"
                  - "516 - Educational sciences"
                  - "517 - Political science"
                  - "518 - Media and communications"
                  - "519 - Social and economic geography"
                  - "520 - Other social sciences"
                  - "6 - Humanities"
                  - "611 - Philosophy"
                  - "6121 - Languages"
                  - "6122 - Literature studies"
                  - "6131 - Theatre, dance, music, other performing arts"
                  - "6132 - Visual arts and design"
                  - "614 - Theology"
                  - "615 - History and archaeology"
                  - "616 - Other humanities"
                  - "9 - Other"
                  - "999 - Other"
                description: Field of science identifier (according to OKM classification)
                type: string
            required:
              - subject
            description: Subjects
            type: object
          type: array
          uniqueItems: true
        keywords:
          description: A list of keywords or tags describing the resources. It is recommended
            to use a controlled vocabulary, ontology or classification when choosing
            keywords. Multiple keywords can be added, separating them by comma.
          type: string
        contributors:
          description: The person(s) responsible for contributing to the development
            of the dataset.
          items:
            additionalProperties: true
            properties:
              affiliation:
                description: The organizational or institutional affiliation of the
                  creator. Upon filling the form with the organization or institution
                  suggestion will be made from Research Organization Registry (ROR)
                  Community API.
                items:
                  properties:
                    affiliationIdentifier:
                      description: URI location based on the URI scheme of the name
                        identifier this will be pre-filled based on  https://ror.org/name.
                      type: string
                    affiliationIdentifierScheme:
                      description: Identifier scheme name. This will default to ROR.
                      type: string
                    name:
                      description: Name of the place of affiliation
                      type: string
                    schemeUri:
                      description: Name identifier scheme. This will default to https://ror.org/.
                      type: string
                  description: Affiliation Details
                  type: object
                type: array
                uniqueItems: true
              contributorType:
                enum:
                  - Contact Person
                  - Data Collector
                  - Data Curator
                  - Data Manager
                  - Distributor
                  - Editor
                  - Producer
                  - Project Leader
                  - Project Manager
                  - Project Member
                  - Related Person
                  - Research Group
                  - Researcher
                  - Rights Holder
                  - Sponsor
                  - Supervisor
                  - Work Package Leader
                  - Other
                description: Type of contributor
                type: string
              familyName:
                description: Family Name
                type: string
              givenName:
                description: Given Name
                type: string
              name:
                description: This field will be constructed based from Given Name and
                  Family Name.
                type: string
              nameIdentifiers:
                description: Uniquely identifies the contributor, according to various
                  schemas, e.g. ORCID, ROR or ISNI. Use name identifier expressed as
                  URL.
                items:
                  properties:
                    nameIdentifier:
                      description: URI location based on the URI scheme of the name
                        identifier e.g. https://orcid.org/nameIdentifier .
                      type: string
                    nameIdentifierScheme:
                      description: Identifier scheme name e.g. ORCID, ROR or ISNI .
                      type: string
                    schemeUri:
                      description: Depending on the name identifier scheme e.g. https://isni.org/
                        or https://orcid.org/ or https://ror.org/ or https://www.grid.ac/.
                      format: uri
                      type: string
                  description: Contributor Name Identifier
                  type: object
                type: array
                uniqueItems: true
            required:
              - givenName
              - familyName
              - contributorType
              - affiliation
            description: Contributor
            type: object
          type: array
          uniqueItems: true
        dates:
          description: List of relevant dates to publication. The type of date can vary
            and it is recommended to add information if appropriate to distinguish between
            dates.
          items:
            additionalProperties: false
            properties:
              date:
                description: A standard format for a date value.
                type: string
              dateInformation:
                description: Specific information about the date, if appropriate.
                type: string
              dateType:
                description: Relevance of the date for the resources being submitted.
                enum:
                  - Accepted
                  - Available
                  - Collected
                  - Copyrighted
                  - Created
                  - Issued
                  - Submitted
                  - Updated
                  - Valid
                  - Withdrawn
                  - Other
                type: string
            required:
              - date
              - dateType
            description: Date
            type: object
          type: array
          uniqueItems: true
        descriptions:
          description: Additional information about the resources that does not fit
            in any of the other categories, or general descriptions that are supplemental
            to the descriptions added for Study or Datasets.
          items:
            additionalProperties: false
            properties:
              description:
                description: description
                type: string
              descriptionType:
                enum:
                  - Abstract
                  - Methods
                  - Series Information
                  - Table Of Contents
                  - Technical Info
                  - Other
                description: Description Type
                type: string
              lang:
                description: Language
                type: string
            description: description
            type: object
          type: array
          uniqueItems: true
        geoLocations:
          description: Spatial region or named place where the data was gathered or
            where the resources are focused.
          items:
            additionalProperties: false
            properties:
              geoLocationBox:
                description: The spatial limits of a box. A box is defined by two geographic
                  points. Left low corner and right upper corner. Each point is defined
                  by its longitude and latitude.
                properties:
                  eastBoundLongitude:
                    description: Longitude coordinate of east bound.
                    type: string
                  northBoundLatitude:
                    description: Latitude coordinate of north bound.
                    type: string
                  southBoundLatitude:
                    description: Latitude coordinate of south bound.
                    type: string
                  westBoundLongitude:
                    description: Longitude coordinate of west bound.
                    type: string
                type: object
              geoLocationPlace:
                description: Geolocation Place
                type: string
              geoLocationPoint:
                additionalProperties: false
                description: A point location in space. A point contains a single longitude-latitude
                  pair.
                properties:
                  pointLatitude:
                    description: Latitude coordinate
                    type: string
                  pointLongitude:
                    description: Longitude coordinate
                    type: string
                type: object
              geoLocationPolygon:
                items:
                  properties:
                    pointLatitude:
                      description: Latitude coordinate
                      type: string
                    pointLongitude:
                      description: Longitude coordinate
                      type: string
                  description: Polygon point object
                  type: object
                description: A drawn polygon area, defined by a set of polygon points
                type: array
            description: GeoLocation
            type: object
          type: array
          uniqueItems: true
        language:
          description: Primary language of the submitted resources.
          enum:
            - Abkhaz
            - Afar
            - Afrikaans
            - Akan
            - Albanian
            - Amharic
            - Arabic
            - Aragonese
            - Armenian
            - Assamese
            - Avaric
            - Avestan
            - Aymara
            - Azerbaijani
            - Bambara
            - Bashkir
            - Basque
            - Belarusian
            - Bengali
            - Bihari
            - Bislama
            - Bosnian
            - Breton
            - Bulgarian
            - Burmese
            - Catalan
            - Chamorro
            - Chechen
            - Chichewa
            - Chinese
            - Chuvash
            - Cornish
            - Corsican
            - Cree
            - Croatian
            - Czech
            - Danish
            - Divehi
            - Dutch
            - Dzongkha
            - English
            - Esperanto
            - Estonian
            - Ewe
            - Faroese
            - Fijian
            - Finnish
            - French
            - Fula
            - Galician
            - Ganda
            - Georgian
            - German
            - Greek
            - "Guaran\xED"
            - Gujarati
            - Haitian
            - Hausa
            - Hebrew
            - Herero
            - Hindi
            - Hiri Motu
            - Hungarian
            - Icelandic
            - Ido
            - Igbo
            - Indonesian
            - Interlingua
            - Interlingue
            - Inuktitut
            - Inupiaq
            - Irish
            - Italian
            - Japanese
            - Javanese
            - Kalaallisut
            - Kannada
            - Kanuri
            - Kashmiri
            - Kazakh
            - Khmer
            - Kikuyu
            - Kinyarwanda
            - Kirundi
            - Komi
            - Kongo
            - Korean
            - Kurdish
            - Kwanyama
            - Kyrgyz
            - Lao
            - Latin
            - Latvian
            - Limburgish
            - Lingala
            - Lithuanian
            - Luba-Katanga
            - Luxembourgish
            - Macedonian
            - Malagasy
            - Malay
            - Malayalam
            - Maltese
            - Manx
            - "M\u0101ori"
            - Marathi
            - Marshallese
            - Mongolian
            - Nauru
            - Navajo
            - Ndonga
            - Nepali
            - Northern Ndebele
            - Northern Sami
            - "Norwegian Bokm\xE5l"
            - Norwegian Nynorsk
            - Norwegian
            - Nuosu
            - Occitan
            - Ojibwe
            - Old Church Slavonic
            - Oriya
            - Oromo
            - Ossetian
            - "P\u0101li"
            - Panjabi
            - Pashto
            - Persian
            - Polish
            - Portuguese
            - Quechua
            - Romanian
            - Romansh
            - Russian
            - Samoan
            - Sango
            - Sanskrit
            - Sardinian
            - Scottish Gaelic
            - Serbian
            - Shona
            - Sindhi
            - Sinhala
            - Slovak
            - Slovenian
            - Somali
            - Southern Ndebele
            - Southern Sotho
            - Spanish
            - Sundanese
            - Swahili
            - Swati
            - Swedish
            - Tagalog
            - Tahitian
            - Tajik
            - Tamil
            - Tatar
            - Telugu
            - Thai
            - Tibetan
            - Tigrinya
            - Tonga
            - Tsonga
            - Tswana
            - Turkish
            - Turkmen
            - Twi
            - Ukrainian
            - Urdu
            - Uyghur
            - Uzbek
            - Venda
            - Vietnamese
            - "Volap\xFCk"
            - Walloon
            - Welsh
            - Western Frisian
            - Wolof
            - Xhosa
            - Yiddish
            - Yoruba
            - Zhuang
            - Zulu
          type: string
        relatedIdentifiers:
          description: Information about a resource related to the one being registered,
            primarily used to provide series information or a text citation where the
            related resource does not have an identifier. It is also optional to provide
            such an identifier.
          items:
            additionalProperties: false
            properties:
              relatedIdentifier:
                description: These must be globally unique identifiers and correspond
                  to the type selected. e.g. 10.2022/example.78m9865 for DOI identifier
                  Type
                type: string
              relatedIdentifierType:
                enum:
                  - ARK
                  - arXiv
                  - bibcode
                  - DOI
                  - EAN13
                  - EISSN
                  - Handle
                  - IGSN
                  - ISBN
                  - ISSN
                  - ISTC
                  - LISSN
                  - LSID
                  - PMID
                  - PURL
                  - UPC
                  - URL
                  - URN
                  - w3id
                description: Identifier Type
                type: string
              relatedMetadataScheme:
                description: 'To be used only with this relation pair: (Has Metadata/Is
                  Metadata For). Example DDI-L'
                type: string
              relationType:
                enum:
                  - Cites
                  - Is Cited By
                  - Compiles
                  - Is Compiled By
                  - Continues
                  - Is Continued By
                  - Describes
                  - Is Described By
                  - Documents
                  - Is Documented By
                  - Is Derived From
                  - Is Source Of
                  - Has Metadata
                  - Is Metadata For
                  - Has Part
                  - Is Part Of
                  - Is Supplemented By
                  - Is Supplement To
                  - Obsoletes
                  - Is Obsoleted By
                  - References
                  - Is Referenced By
                  - Requires
                  - Is Required By
                  - Reviews
                  - Is Reviewed By
                  - Has Version
                  - Is Version Of
                  - Is New version Of
                  - Is Previous Version Of
                  - Is Published In
                  - Is Variant Form Of
                  - Is Original Form Of
                  - Is Identical To
                description: Relationship Type
                type: string
              resourceTypeGeneral:
                enum:
                  - Audiovisual
                  - Book
                  - Book Chapter
                  - Collection
                  - Computational Notebook
                  - Conference Paper
                  - Conference Proceeding
                  - Data Paper
                  - Dataset
                  - Dissertation
                  - Event
                  - Image
                  - Interactive Resource
                  - Journal
                  - Journal Article
                  - Model
                  - Output Management Plan
                  - Peer Review
                  - Physical Object
                  - Preprint
                  - Report
                  - Service
                  - Software
                  - Sound
                  - Standard
                  - Text
                  - Workflow
                  - Other
                description: Resource Type
                type: string
              schemeType:
                description: 'To be used only with this relation pair: (Has Metadata/Is
                  Metadata For). Examples: XSD, DDT, Turtle'
                type: string
              schemeUri:
                description: 'To be used only with this relation pair: (Has Metadata/Is
                  Metadata For). Example: http://www.ddialliance.org/Specification/DDI-Lifecycle/3.1/XMLSchema/instance.xsd'
                type: string
            required:
              - relatedIdentifier
              - relatedIdentifierType
              - relationType
            description: Identifier of related resource
            type: object
          type: array
          uniqueItems: true
        alternateIdentifiers:
          description: An identifier or identifiers other than the primary or related
            identifier applied to the resources being registered. EGA identifier(s)
            obtained, that can be used as an alternative to the current resources.
          items:
            additionalProperties: false
            properties:
              alternateIdentifier:
                description: Alternate Identifier
                type: string
              alternateIdentifierType:
                enum:
                  - ARK
                  - arXiv
                  - bibcode
                  - DOI
                  - EAN13
                  - EISSN
                  - Handle
                  - IGSN
                  - ISBN
                  - ISSN
                  - ISTC
                  - LISSN
                  - LSID
                  - PMID
                  - PURL
                  - UPC
                  - URL
                  - URN
                  - w3id
                description: Alternate Identifier Type
                type: string
            required:
              - alternateIdentifier
              - alternateIdentifierType
            description: Identifier(s) other than the primary identifier of the resources
            type: object
          type: array
          uniqueItems: true
        sizes:
          description: 'Size (e.g., bytes, pages, inches, etc.) or duration (extent),
            e.g., hours, minutes, days, etc., of a resources. Examples: ''15 pages'',
            ''6 MB'', ''45 minutes''.'
          items:
            description: Size
            type: string
          type: array
        formats:
          description: Use file extension or MIME type where possible, e.g., PDF, XML,
            MPG or application/pdf, text/xml, video/mpeg. We will pre-fill some of them
            based on what was filled in metadata.
          items:
            description: Format
            type: string
          type: array
        fundingReferences:
          description: It is recommended to supply funding information when financial
            support has been received. The funder will be identified by their Research
            Organization Registry (ROR).
          items:
            additionalProperties: false
            properties:
              funderName:
                description: Funder Name
                type: string
                enum:
                  - Alfred Kordelinin Säätiö
                  - Arvo ja Inkeri Suomisen Sääti,
                  - Blood Disease Research Foundation
                  - Helsingin Yliopisto
                  - Helsingin ja Uudenmaan Sairaanhoitopiiri
                  - Ida Montinin Säätiö
                  - Itä-Suomen Yliopisto
                  - Joensuun Yliopiston Tukisäätiö
                  - KAUTE-Säätiö
                  - Medicinska Understödsföreningen Liv och Hälsa
                  - Moikoisten Syöväntutkimussäätiö
                  - Nokia
                  - Paavo ja Eila Salosen Stipendirahaston
                  - Palosuojelurahasto
                  - Suomen Lääketieteen Säätiö
                  - Victoriastiftelsen
                  - Walter ja Andrée de Nottbeckin Säätiö
                  - Wilhelm och Else Stockmanns Stiftelse
                  - Yrjö Jahnssonin Säätiö
                  - Yrkeshögskolan Novia
              funderIdentifier:
                description: Unique identifier for funding entity
                type: string
              funderIdentifierType:
                description: The type of funder identifier, one of Crossref Funder ID,
                  GRID, ISNI, or ROR.
                enum:
                  - Crossref Funder ID
                  - GRID
                  - ISNI
                  - ROR
                  - Other
                type: string
              awardTitle:
                description: The human readable title of the award.
                type: string
              awardNumber:
                description: The code assigned by the funder to a sponsored award.
                type: string
              awardUri:
                description: The URI leading to a page provided by the funder for more
                  information about the award (grant).
                type: string
            required:
              - funderName
              - funderIdentifier
              - funderIdentifierType
            description: Information about financial support for producing the resources
            type: object
          type: array
          uniqueItems: true
    REMS_DAC:
      type: object
      required:
        - workflowId
        - organizationId
        - licenses
      properties:
        organizationId:
          type: integer
          description: ID of an organization in REMS
        workflowId:
          type: integer
          description: ID of a Workflow, obtained from REMS, and must belong to organizationId
        licenses:
          type: array
          items:
            type: integer
            description: IDs of Licenses, obtained from REMS, and must belong to organizationId
    REMS:
      type: array
      description: Array of organizations with workflows and licenses from REMS database
      items:
        type: object
        properties:
          id:
            type: string
            description: ID of the organization
            example: "CSC"
          name:
            type: string
            description: Name of the organization
            example: "CSC – IT CENTER FOR SCIENCE LTD."
          workflows:
            type: array
            description: Workflows from REMS
            items:
              type: object
              properties:
                id:
                  type: integer
                title:
                  type: string
                  description: Name of the workflow
          licenses:
            type: array
            description: Licenses from REMS
            items:
              type: object
              properties:
                id:
                  type: integer
                title:
                  type: string
                  description: Name of the license
                textcontent:
                  type: string
                  description: Content of the license
    JSONPatch:
      type: array
      items:
        type: object
        required:
          - op
          - path
          - value
        additionalProperties: false
        properties:
          op:
            type: string
            description: JSON Patch operation
            enum: [ "add", "replace" ]
            example: add
          path:
            type: string
            description: Key that will be patched
            example: /metadataObjects/-
          value:
            additionalProperties:
              oneOf:
                - type: string
                - type: array
            example: [ object ]
    Checksum:
      type: array
      items:
        type: object
        properties:
          type:
            type: string
            enum: [ "md5", "sha256" ]
            title: Checksum type
          value:
            type: string
            title: Checksum value
    SubmissionFile:
      type: object
      description: Describes a submission file information that can be attached to a submission
      properties:
        accessionId:
          type: string
          title: Accession Id for file
        version:
          type: integer
          title: Version of the file
          example: 1
        status:
          type: string
          title: Status of the file
          enum: [ "added","ready","verified","completed","failed" ]
        objectId:
          type: object
          title: File size in bytes
          properties:
            accessionId:
              type: string
              description: accession id generated to identify an object
            schema:
              type: string
              description: type of schema this Accession ID relates to and was added in submit
    TaxonomyResult:
      type: object
      description: Taxonomy search result
      properties:
        tax_id:
          type: string
          title: Taxonomy id
          example: 3320
        scientific_name:
          type: string
          title: Scientific name
          example: Abies magnifica
        common_name:
          type: string
          title: Common name or genbank common name (if available)
          example: red fir
    FilesForIngestion:
      type: object
      description: File's information for ingestion
      properties:
        path:
          type: string
          title: File path
          example: S3://bucket-name/files/filename.c4gh
        accessionId:
          type: string
          title: Accession id for file
          example: 5c4a1969e24a4bc5962eac8c2c5348ed
